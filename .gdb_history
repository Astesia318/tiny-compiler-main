q
n
p $a0
q
b process_program 
r ./test/test.c
p/x global
p/x id_global
p/x *id_global
p/s *id_global
p/s *id_global->next
p/s *id_global->next->next
p/s *id_global->next->next->next
p/s *id_global->next->next->next->next
q
c
q
c
q
c
q
q
s
got
got -r
plt
checksec
vmmap
s
q
b asm_load
r ./test/test.c
s
p/s s
p/s *s
p/s *s
q
s
s
s
q
s
s
q
q
b _collide_identifier
r ./test/test.c
s
p/x name
p/s name
p/s id_type 
s
s
c
s
p/s name
c
s
p/s name
s
s
n
s
c
s
s
p/s name
c
cs
s
p/s name
c
p/s name
s
p/s name
p/s id_type 
s
p/s name
p/s *id_table
p/s **id_table
p/s **id_table->next
p/s (**id_table)->next
p/s *(*id_table)->next
p/s *((*id_table)->next)->next
s
s
q
b _add_identifier
r ./test/test.c
s
p/s *name
p/s name
s && p/s name
s | p/s name
s ; p/s name
s \ p/s name
sp/s name
s
fin
s
c
c
p/s name
s
p/s name
c
s
p/s name
c
c
c
r ./test/test.c
c
s
p/s name
p/s data_type
p/s id_type
q
q
q
q
q
q
c
q
c
q
c
q
c
q
b process_float 
r ./test/test.c
c
r ./test/test.c
c
n
s
c
c
r ./test/test.c
c
r ./test/test.c
c
s
n
p/x id_local
p/s *id_local
q
b asm_lc
r ./test/test.c
s
n
p/s *s
p/s *s->num
p/s s->num
p/x s->num
p s->num
p &s->num
p &s->num.num_int
p &s->num.num_float
p &s->num.num_char
x/10gx &s->num
q
b asm_lc
r ./test/test.c
n
p/s s
p/s *s
x/10gx s->num
x/10gx &s->num
q
b asm_bin
r ./test/test.c
n
s
p strcmp
q
b id_to_str 
r ./test/test.c
n
p/s *id
c
p/s *id
n
p/s *id
c
p/s *id
c
s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
c
s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
s
p/s *id
cs
s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
b e_tac.c:275
c
r
c
delete b 0
info b
delete b 1
delete b:1
c
p/s *code
p/s *code->id_3
p/s *code->id_2
p/s *code->id_1
p id_to_str(code->id_3)
s
p temp_buf
p/s *id
n
p temp_buf
s
s
n
p temp_buf
p/s *id
s
c
q
