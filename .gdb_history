s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
s
p/s *id
c
b e_tac.c:275
c
r
c
delete b 0
info b
delete b 1
delete b:1
c
p/s *code
p/s *code->id_3
p/s *code->id_2
p/s *code->id_1
p id_to_str(code->id_3)
s
p temp_buf
p/s *id
n
p temp_buf
s
s
n
p temp_buf
p/s *id
s
c
q
b _find_identifier 
r ./test/test.c
n
p/s name
c
s
c && s
p/s name
s
p/s name
c
p/s name
s
p/s name
c
s
p/s name
c
s
p/s name
c
s
p/s name
c
c
c
s
p/s name
c
s
p/s name
c
s
p/s name
c
s
p/s name
n
p/s *id_table 
s
p/s *id_table 
p *id_table 
p/s **id_table 
p/s **id_table->next
p/s *id_global
p/s *id_global->next
p/s name
s
q
b _find_identifier if strcmp(name,"func")
r ./test/test.c
b e_tac.c:21 if strcmp(name,"func")
r ./test/test.c
b e_tac.c:21 if strcmp(name,"func")==0
r ./test/test.c
info b
p/s name
q
b e_tac.c:21 if id_table==&id_global
r ./test/test.c
p/s name
c
p/s name
p check
s
p/s *cur
s
r ./test/test.c
p/s *cur
s
p/s *cur
p/s name
p/s *id_global
p/s id_global
s
c
p/s id_global
p/s *cur
p/s name
c
p/s name
c
p/s name
p check
q
b process_calculate 
r ./test/test.c
s
p/s exp_l
p/s *exp_l
p/s *exp_l.addr
p/s *exp_r.addr
p/s cal
q
q
s
q
qq
q
q
s
vmmap
s
vmmap
plt
p *__
p __addsf3
p *__addsf3
s
x/10gx 0x10334
x/10gi 0x10334
q
s
x/10gx 0x10334
p __addsf3
q
b process_calculate 
q
b e_proc.c:41
r
r ./test/test.c
p/s *id_global 
p/s *id_global.next
p/s *id_global.next.next
n
p/s *id_global 
c
s
s
p/s name
c
s
s
p/s name
s
s
p/s name
s
p/s name
s
q
b o_reg.c:123
r ./test/test.c
p/s *s
c
p/s *s
c
p/s *s
p/s s-
p/s s->label
q
b o_reg.c:173
r ./test/test.c
p/s *s
c
p/s *s
c
p/s *s
s
s
p/s *s
c
p/s *s
c
p/s *s
q
q
b o_reg.c:173
r ./test/test.c
p/s *s
c
p/s *s
c
p/s *s
c
p/s *s
c
p/s *s
c
p/s *s
p scope
b e_wrap.c:119
b o_wrap.c:119
c
p/s *code
p/s *code->id_1
p tof
s
s
p/s *code->id_1
r ./test/test.c
p/s *code->id_1
p tof
c
p tof
c
p tof
c
p tof
p/s *code->id_1
c
c
p/s *code->id_1
p tof
c
p tof
c
p tof
p/s *s
c
p tof
p &tof
p &rdesc
p &rdesc[R_zero]
p &rdesc[15]
p &rdesc[14]
q
