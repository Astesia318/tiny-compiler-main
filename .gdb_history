p/s *rdesc[1]->var
c
p rdesc
p/s *rdesc[1]->var
p/s *rdesc[0]->var
c
p rdesc
p/s *rdesc[2]->var
p/s *rdesc[0]->var
p/s *rdesc[1]->var
c
p rdesc
p/s *rdesc[0]->var
p/s *rdesc[2]->var
p/s *rdesc[1]->var
p rdesc
n
p/x latest_appear 
p/s *s
r ./test/test.c
c
p rdesc
c
p rdesc
c
p rdesc
c
p rdesc
c
p rdesc
r ./test/test.c
c
p rdesc
r ./test/test.c
c
p rdesc
s
p/x r
p/s *s
p/s *rdesc[1]->var
p/s *rdesc[2]->var
p/s *rdesc[0]->var
p/s *s
s
p/s *s
p rdesc
s
p rdesc
n
p rdesc
n
s
n
s
n
s
p rdesc
p/s *rdesc[0]->var
p/s rdesc[0]
p/s rdesc[1]
p/s rdesc[2]
p/s rdesc[3]
s
n
p/s *b
p/s *c
p/s rdesc[3]
p/s rdesc[2]
p/s rdesc[1]
p/s rdesc[0]
p/s b
p/s c
s
p s
s
p s
p/s *s
s
q
s
q
s
q
s
p/x -174
p/x -174+0xae
q
q
s
s
q
s
q
b asm_call
r ./test/test.c
s
n
p/x cur
p/x *cur
n
p/x cur
r ./test/test.c
n
p/x *cur
p/x *cur->prev
q
s
q
s
c
q
q
p/x c
s
s
n
s
q
s
q
s
q
s
n
n
s
q
s
n
q
q
n
q
q
n
p $a0
q
b process_program 
r ./test/test.c
p/x global
p/x id_global
p/x *id_global
p/s *id_global
p/s *id_global->next
p/s *id_global->next->next
p/s *id_global->next->next->next
p/s *id_global->next->next->next->next
q
c
q
c
q
c
q
q
s
got
got -r
plt
checksec
vmmap
s
q
b asm_load
r ./test/test.c
s
p/s s
p/s *s
p/s *s
q
s
s
s
q
s
s
q
q
b _collide_identifier
r ./test/test.c
s
p/x name
p/s name
p/s id_type 
s
s
c
s
p/s name
c
s
p/s name
s
s
n
s
c
s
s
p/s name
c
cs
s
p/s name
c
p/s name
s
p/s name
p/s id_type 
s
p/s name
p/s *id_table
p/s **id_table
p/s **id_table->next
p/s (**id_table)->next
p/s *(*id_table)->next
p/s *((*id_table)->next)->next
s
s
q
b _add_identifier
r ./test/test.c
s
p/s *name
p/s name
s && p/s name
s | p/s name
s ; p/s name
s \ p/s name
sp/s name
s
fin
s
c
c
p/s name
s
p/s name
c
s
p/s name
c
c
c
r ./test/test.c
c
s
p/s name
p/s data_type
p/s id_type
q
q
q
q
q
q
